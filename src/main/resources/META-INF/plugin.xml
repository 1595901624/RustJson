<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.rust.json.quick.RustJson</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>RustJson</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="luhaoyu@live.com" url="https://1595901624.github.io/">@Cloris</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->

    <description><![CDATA[
    <h1>Rust Json</h1>
    <p style="font-weight: bold;">A Json to Rust Struct Idea Plugin.</p>
    <h2>Features</h2>
    <ul>
        <li>Support <code>debug</code> derive</li>
        <li>Support <code>clone</code> derive</li>
        <li>Support <code>serde</code> derive</li>
        <li>Support <code>serde</code> rename</li>
        <li>Support RustRover</li>
        <li>Support Offline use</li>
        <li>Auto import `serde` and `serde_json` crate</li>
    </ul>

    <h2>Usage</h2>
    <ol>
        <li>Open JetBrains IDE, such
            as <<code><Inte></Inte></code>lliJ IDEA</code> / <code>PyCharm</code> / <code>WebStorm</code> / <code>GoLand</code> / <code>CLion</code> / <code>Rider</code> / <code>DataGrip</code> / <code>RubyMine</code> / <code>PhpStorm</code> / <code>AppCode</code> / <code>Android Studio</code>
            / <code>RustRover</code> and so on.
        </li>
        <li>Settings -> Plugins -> Marketplace -> Search <code>RustJson</code> -> Install</li>
        <li>Open any file</li>
        <li>Press <code>Alt + W</code>  to open the window or right click to open the context menu and select <code>Generate Rust Struct</code></li>
        <li>Input Json text and press <code>OK</code></li>
    </ol>

    <h2>Buy me a coffee</h2>
    <p>If you like this plugin, you can buy me a coffee.</p>
    <table>
        <tr>
            <td><img src="https://raw.githubusercontent.com/1595901624/RustJson-vscode/main/demo/bmc_qr.png" height="180" /></td>
            <td><img src="https://raw.githubusercontent.com/1595901624/RustJson-vscode/main/demo/wechat.jpeg" height="180" /></td>
            <td><img src="https://raw.githubusercontent.com/1595901624/RustJson-vscode/main/demo/alipay.jpeg" height="180" /></td>
        </tr>
        <tr>
            <td>BuyMeACoffee</td>
            <td>Wechat/Wechat HK</td>
            <td>Alipay/AlipayHK</td>
        </tr>

    <h2>Feedback</h2>
    <p>If you have any questions, please submit an issue on <a href="https://github.com/1595901624/RustJson">Github</a>. And you can also follow my WeChat Official Account by scanning the QR
code below.</p>
    <img src="https://raw.githubusercontent.com/1595901624/RustJson-vscode/main/demo/qrcode.jpg" width="30%">
    <h2>License</h2>
    <p>AGPLv3</p>
]]></description>

    <change-notes>Add option "rename macro" and insert code from caret position</change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">

    </extensions>
    <actions>
        <action id="com.rust.json.quick.rustjson.format" class="com.rust.json.quick.rustjson.JsonFormatAction"
                text="Generate Rust Struct" description="format a json">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <keyboard-shortcut keymap="$default" first-keystroke="alt W"/>
        </action>
    </actions>
</idea-plugin>